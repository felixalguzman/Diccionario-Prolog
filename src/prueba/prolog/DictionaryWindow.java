package prueba.prolog;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.Hashtable;
import java.util.Map;
import org.jpl7.Atom;
import org.jpl7.Compound;
import org.jpl7.Query;
import org.jpl7.Term;
import org.jpl7.Util;
import org.jpl7.Variable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felix Guzman
 */
public class DictionaryWindow extends javax.swing.JFrame {

    private String sinonimos = "";
    /**
     * Creates new form DictionaryWindow
     */
    public DictionaryWindow() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        txtField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Opciones:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sinonimos", "Antonimos" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 306, Short.MAX_VALUE))
                            .addComponent(txtField)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(txtField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String palabra = txtField.getText();
        jTextArea1.setText("");
        sinonimos = "";
        String[] sin = separarFrase(palabra);
        
        if(jComboBox1.getSelectedIndex() == 0)
        {
            for (String string : sin) {
                buscarSinonimo(string);
            }
            
            jTextArea1.setText(sinonimos);
        }
       
        
        
//        if(jComboBox1.getSelectedIndex() == 0)
//        {
//             String re = buscarDefinicion(palabra);
//             jTextArea1.setText(re.toString());
//        }
        
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void buscarSinonimo(String pal)
    {
        String q = "consult('PL/sinonimos.pl')";
        Query q1 = new Query(q);
        System.out.println("Consulta de archivo" + " " + (q1.hasSolution() ?"correcto":"incorrecto" ) );
        String x1 = null;
        x1= pal.toLowerCase();
        String y = "_";
        String sinonimo = "sacarsinonimo("+x1+",X).";
        Query q2 = new Query(sinonimo);
        if(q2.hasSolution())
        {
            // Map<String, Term>[] x = q2.allSolutions();
             Term x = q2.oneSolution().get("X");
            //ArrayList<String> lista = new ArrayList<String>();

               sinonimos += x.toString() + " ";

           // for (int i = 0; i < x.length; i++) {
             //   lista.add(x[i].toString());
              //   sinonimos +=x[i].toString() + " ";
               // System.out.println("En pos de lista "+i+" respuesta: " +lista.get(i) );
           // }
        }
        else
        {
            sinonimos += pal + " ";
        }
       
       // System.out.println("Respuesta :" + Arrays.toString(lista.toArray()));
       // return x1;
    }
    
    public String[] separarFrase(String s) {
        int cp = 0; // Cantidad de palabras
         
        // Recorremos en busca de espacios
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == ' ') { // Si es un espacio
                cp++; // Aumentamos en uno la cantidad de palabras
            }
        }
         
        // "Este blog es genial" tiene 3 espacios y 3 + 1 palabras
        String[] partes = new String[cp + 1];
        for (int i = 0; i < partes.length; i++) {
            partes[i] = ""; // Se inicializa en "" en lugar de null (defecto)
        }
         
        int ind = 0; // Creamos un índice para las palabras
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == ' ') { // Si hay un espacio
                ind++; // Pasamos a la siguiente palabra
                continue; // Próximo i
            }
            partes[ind] += s.charAt(i); // Sino, agregamos el carácter a la palabra actual
        }
        return partes; // Devolvemos las partes
    }
    
    public String buscarDefinicion(String pal)
    {
        String q = "consult('Resources/DiccionarioParcial2.pl')";
        Query q1 = new Query(q);
        String X="";
        System.out.println("Consulta de archivo" + " " + (q1.hasSolution() ?"correcto":"incorrecto" ) );
        String a = null;
        pal = pal.toLowerCase();
        String consulta = "means("+pal+",X)";
        
        Query q2 = new Query(consulta);
     
        //res = Util.atomListToStringArray(q2.oneSolution().get(res));
       Term x = q2.oneSolution().get("X");
        
      
       
        Map<String, Term> m[];
        
       
            //Term bound =((Hashtable) q2.nextElement());
            m = q2.allSolutions();
        
             a = x.toString();
//        for (int i=0;i<x.arity();i++) {
//          resultado.add(x.toTermArray());
//        }
        
        return a;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextField txtField;
    // End of variables declaration//GEN-END:variables
}
